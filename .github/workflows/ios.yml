# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    env:
      GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    name: Build and deploy
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set default branch
        run: git config --global init.defaultBranch master
      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
#      - name: Install Ruby Dependencies
#        run: bundle install
#      - name: Install Fastlane
#        run: gem install fastlane -no-rdoc --no-document
#      - name: Run Unit Test
#        run: bundle exec fastlane run_test_suite
      - name: Publish Jazzy Docs
        uses: steven0351/publish-jazzy-docs@v1
        with:
          personal_access_token: "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"
          config: ./.jazzy.yaml
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-Files
          path: Documentation/*
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: do git push
        run: |
              git config --global user.email "abhinav.dobhal44@gmail.com"
              git config --global user.name "abhinav2014"
              git add -A
              git commit -m "message"
              git push https://abhinav2014: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@github.com/abhinav2014/XCCov-Demo.git HEAD:master

        
#      - name: Run xcov
#        run: bundle exec fastlane run_xcov
           
#      - name: Run codecov
#        run: sh codecove.sh

#      - name: show contents of report files
#        run: sh print-report.sh

#      - name: Permit Documentation
#        run: |
#          sudo chown -R $(id -u):$(id -g) ./Documentation
