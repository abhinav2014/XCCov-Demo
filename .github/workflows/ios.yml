# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    env:
      GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    name: Build and deploy
    runs-on: macos-11
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.2.1'
      - name: Publish Jazzy Docs
        uses: steven0351/publish-jazzy-docs@v1
        with:
          personal_access_token: "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"
#      - name: Install Ruby Dependencies
#        run: bundle install
#      - name: Install Fastlane
#        run: gem install fastlane -no-rdoc --no-document
#      - name: swift package
#        run: |
#          cd XCCov-Demo
#          swift package init
#      - name: swift docc action
#        run: /usr/bin/swift package ./docs generate-documentation --disable-indexing --transform-for-static-hosting
#        uses: fwcd/swift-docc-action@v1
#        with:
#          target: "XCCov-Demo"
#          output: ./docs
#          hosting-base-path: "XCCov-Demo"
#          disable-indexing: 'true'
#          transform-for-static-hosting: 'true'

#      - name: Run Unit Test
#        run: bundle exec fastlane run_test_suite
#      - name: Run docc build
#        run: sh doccc.sh
#       - name Commit documentation
      - name: Permit Documentation
        run: |
          sudo chown -R $(id -u):$(id -g) ./docs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-Files
          path: Documentation/*
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: do git push
        run: |
              git config --global user.email "abhinav.dobhal44@gmail.com"
              git config --global user.name "abhinav2014"
              git add -A
              git commit -m "message"
              git push https://abhinav2014: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@github.com/abhinav2014/XCCov-Demo.git HEAD:master

        
#      - name: Run xcov
#        run: bundle exec fastlane run_xcov
#      - run: |
#              bundle config path vendor/bundle
#              bundle install --without=documentation --jobs 4 --retry 3
#      - name: Extract branch name
#        shell: bash
#        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#        id: get_branch
#      - run: bundle exec slather
#        env:
#           GIT_BRANCH: ${{ steps.get_branch.outputs.branch }}
#           CI_PULL_REQUEST: ${{ github.event.number }}
#           COVERAGE_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           COVERALLS_REPO_TOKEN: 'J20Mo3Sb32CLmwu3gJTkj5xLzFKiXOr8R'
           
           
#      - uses: checkity/upload@v1
#        with:
#           file-pattern: '**/jacoco.xml,**/lcov.info'
#           repo-token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Run codecov
#        run: sh codecove.sh

#      - name: show contents of report files
#        run: sh print-report.sh

#      - name: Run Danger
#        run: bundle exec danger --verbose
#      - name: Danger usage
#        uses: MeilCli/danger-action@v5
#        with:
#           plugins_file: 'Gemfile'
#           install_path: 'vendor/bundle'
#           danger_file: 'Dangerfile'
#           danger_id: 'danger-pr'
#        env:
#           DANGER_GITHUB_API_TOKEN: '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'
